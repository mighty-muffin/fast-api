---
name: CI - PR

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  pre-commit:
    name: Call Pre-Commit run
    uses: mighty-muffin/.github/.github/workflows/reusable-pre-commit.yml@main

  secret:
    needs:
      - pre-commit
    name: Call Secret Scanning
    uses: mighty-muffin/.github/.github/workflows/reusable-secret.yml@main
    secrets: inherit

  sca:
    needs:
      - pre-commit
    name: Placeholder - Software Composition Analysis
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Run SCA
        run: echo Software Composition Analysis
        shell: bash

  sast:
    needs:
      - pre-commit
    name: Placeholder - Static Application Security Testing
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Connect Tailscale VPN
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Run nslookup & dig
        run: |
          nslookup ${{ secrets.SONAR_HOST_URL }}
          dig ${{ secrets.SONAR_HOST_URL }}
        shell: bash

      - name: Run SAST - SonarQube
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Quality gating SAST - SonarQube
        uses: SonarSource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  unit-test:
    needs:
      - secret
      - sca
      - sast
    name: Run Unit Tests & Integration Tests
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    defaults:
      run:
        working-directory: fast-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev --frozen

      - name: Test with pytest
        run: |
          uv run pytest tests --cov=src

      - name: Minimize uv cache
        run: |
          uv cache prune --ci

  docker-build-push:
    needs:
      - unit-test
    name: Call Docker Build
    uses: mighty-muffin/.github/.github/workflows/reusable-docker-build.yml@main

    permissions:
      contents: read
      packages: write
      pull-requests: write

    with:
      file: "./docker/Dockerfile"
      platforms: |
          linux/amd64
          linux/arm64
